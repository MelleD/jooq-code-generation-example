/*
 * This file is generated by jOOQ.
 */
package com.codegen.liquibase.tables.records;


import com.codegen.liquibase.tables.Foo;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FooRecord extends UpdatableRecordImpl<FooRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>FOO.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>FOO.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>FOO.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>FOO.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>FOO.FOO_TEST</code>.
     */
    public void setFooTest(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>FOO.FOO_TEST</code>.
     */
    public String getFooTest() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FooRecord
     */
    public FooRecord() {
        super(Foo.FOO);
    }

    /**
     * Create a detached, initialised FooRecord
     */
    public FooRecord(Integer id, String name, String fooTest) {
        super(Foo.FOO);

        setId(id);
        setName(name);
        setFooTest(fooTest);
        resetChangedOnNotNull();
    }
}
