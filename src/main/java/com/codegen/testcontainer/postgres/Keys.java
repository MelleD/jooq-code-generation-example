/*
 * This file is generated by jOOQ.
 */
package com.codegen.testcontainer.postgres;


import com.codegen.testcontainer.postgres.tables.Bar;
import com.codegen.testcontainer.postgres.tables.Databasechangeloglock;
import com.codegen.testcontainer.postgres.tables.Foo;
import com.codegen.testcontainer.postgres.tables.records.BarRecord;
import com.codegen.testcontainer.postgres.tables.records.DatabasechangeloglockRecord;
import com.codegen.testcontainer.postgres.tables.records.FooRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BarRecord> PK_BAR = Internal.createUniqueKey(Bar.BAR, DSL.name("pk_bar"), new TableField[] { Bar.BAR.ID }, true);
    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
    public static final UniqueKey<FooRecord> PK_FOO = Internal.createUniqueKey(Foo.FOO, DSL.name("pk_foo"), new TableField[] { Foo.FOO.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BarRecord, FooRecord> BAR__FK_FOO_BAR = Internal.createForeignKey(Bar.BAR, DSL.name("fk_foo_bar"), new TableField[] { Bar.BAR.FOO_ID }, Keys.PK_FOO, new TableField[] { Foo.FOO.ID }, true);
}
